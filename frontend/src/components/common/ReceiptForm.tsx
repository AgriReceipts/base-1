import React from 'react';
import {useForm} from 'react-hook-form';
import {zodResolver} from '@hookform/resolvers/zod';

import type {z} from 'zod';
import {CreateReceiptSchema} from '@/types/receipt';
import api from '@/lib/axiosInstance';

type ReceiptFormData = z.infer<typeof CreateReceiptSchema>;

export const ReceiptForm = () => {
  const {
    register,
    handleSubmit,
    watch,
    reset,
    formState: {errors, isSubmitting},
  } = useForm<ReceiptFormData>({
    resolver: zodResolver(CreateReceiptSchema),
    mode: 'onChange',
  });

  const collectionLocation = watch('collectionLocation');
  const commodity = watch('commodity');
  const nature = watch('natureOfReceipt');

  const onSubmit = async (data: ReceiptFormData) => {
    try {
      const res = await api.post('/receipts/create', data);
      alert('Receipt saved!');
      reset();
    } catch (error: any) {
      console.error(error);
      alert(error?.response?.data?.message || 'Something went wrong');
    }
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)} className='space-y-4 p-4'>
      {/* Basic Fields */}
      <div className='grid md:grid-cols-3 gap-2'>
        <input {...register('receiptDate')} type='date' placeholder='Date' />
        <input {...register('bookNumber')} placeholder='Book #' />
        <input {...register('receiptNumber')} placeholder='Receipt #' />
      </div>
      <div className='text-red-500'>
        {errors.receiptDate?.message}
        {errors.bookNumber?.message}
        {errors.receiptNumber?.message}
      </div>

      {/* Commodity */}
      <select {...register('commodity')}>
        <option value=''>Select Commodity</option>
        <option value='Rice'>Rice</option>
        <option value='Wheat'>Wheat</option>
        <option value='Other'>Other</option>
      </select>
      {commodity === 'Other' && (
        <input {...register('newCommodityName')} placeholder='New Commodity' />
      )}
      {errors.commodity && (
        <p className='text-red-500'>{errors.commodity.message}</p>
      )}

      {/* Quantity, Unit */}
      <input type='number' {...register('quantity')} placeholder='Quantity' />
      <select {...register('unit')}>
        <option value=''>Select Unit</option>
        <option value='quintals'>Quintals</option>
        <option value='numbers'>Numbers</option>
        <option value='bags'>Bags</option>
      </select>

      {/* Nature of Receipt */}
      <select {...register('natureOfReceipt')}>
        <option value=''>Nature</option>
        <option value='mf'>Market Fees</option>
        <option value='lc'>License Charges</option>
        <option value='uc'>Unloading Charges</option>
        <option value='others'>Others</option>
      </select>
      {nature === 'others' && (
        <input {...register('natureOtherText')} placeholder='Specify Nature' />
      )}

      {/* Financials */}
      <input type='number' {...register('value')} placeholder='Total Value' />
      <input type='number' {...register('feesPaid')} placeholder='Fees Paid' />

      {/* Collection Location */}
      <select {...register('collectionLocation')}>
        <option value=''>Select Collection Location</option>
        <option value='office'>Office</option>
        <option value='checkpost'>Checkpost</option>
        <option value='other'>Other</option>
      </select>

      {collectionLocation === 'office' && (
        <input {...register('officeSupervisor')} placeholder='Supervisor' />
      )}
      {collectionLocation === 'checkpost' && (
        <input {...register('checkpostId')} placeholder='Checkpost ID' />
      )}
      {collectionLocation === 'other' && (
        <input
          {...register('collectionOtherText')}
          placeholder='Other Location'
        />
      )}

      {/* Additional Fields */}
      <input {...register('payeeName')} placeholder='Payee Name' />
      <input {...register('generatedBy')} placeholder='Generated By' />
      <input {...register('designation')} placeholder='Designation' />
      <input {...register('committeeId')} placeholder='Committee ID' />

      <button
        type='submit'
        disabled={isSubmitting}
        className='bg-blue-600 text-white px-4 py-2'>
        {isSubmitting ? 'Submittingâ€¦' : 'Submit'}
      </button>
    </form>
  );
};
